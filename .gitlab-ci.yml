# This file is a template, and might need editing before it works on your project.
# Original source: https://gitlab.com/gitlab-org/gitlab-ci-yml/blob/master/Maven.gitlab-ci.yml
---
# Build JAVA applications using Apache Maven (http://maven.apache.org)
# For docker image tags see https://hub.docker.com/_/maven/
#
# For general lifecycle information see
# https://maven.apache.org/guides/introduction/introduction-to-the-lifecycle.html
#
# This template will build and test your projects as well as create the documentation.
#
# * Caches downloaded dependencies and plugins between invocation.
# * Verify but don't deploy merge requests.
# * Deploy built artifacts from master branch only.
# * Shows how to use multiple jobs in test stage for verifying functionality
#   with multiple JDKs.

variables:
  # This will supress any download for dependencies and plugins or upload messages which would
  # clutter the console log.
  # `showDateTime` will show the passed time in milliseconds. You need to specify `--batch-mode` to
  # make this work.
  MAVEN_OPTS: "-Dmaven.repo.local=.m2/repository -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=WARN -Dorg.slf4j.simpleLogger.showDateTime=true -Djava.awt.headless=true"
  # As of Maven 3.3.0 instead of this you may define these options in `.mvn/maven.config` so the
  # same config is used when running from the command line.
  # `installAtEnd` and `deployAtEnd` are only effective with recent version of the corresponding
  # plugins.
  MAVEN_CLI_OPTS: "--batch-mode --errors --fail-at-end --show-version -DinstallAtEnd=true -DdeployAtEnd=true"

# Cache downloaded dependencies and plugins between builds.
# To keep cache across branches add 'key: "$CI_JOB_NAME"'
cache:
  key: "$CI_JOB_NAME"
  paths:
    - .m2/repository

stages:
  - build
  - test

# Build WAR file and make it available (only for one JDK)
package:
  stage: build
  image: maven:3.6.3-jdk-11-slim
  script:
    - 'mvn --file de.lmu.ifi.sosy.tbial/ $MAVEN_CLI_OPTS package -DskipTests'
  artifacts:
    paths:
    - de.lmu.ifi.sosy.tbial/target/*.war

# Run tests on all JDKs
.verify: &verify
  stage: test
  script:
    - 'mvn --file de.lmu.ifi.sosy.tbial/ $MAVEN_CLI_OPTS verify'
    - awk -F"," '{ instructions += $4 + $5; covered += $5 } END { print covered, "/", instructions, "instructions covered"; print 100*covered/instructions, "% covered" }' de.lmu.ifi.sosy.tbial/target/coverage-reports/jacoco-ut/jacoco.csv

tests:jdk11:
  <<: *verify
  image: maven:3.6.3-jdk-11-slim
  artifacts:
    paths:
      - de.lmu.ifi.sosy.tbial/target/coverage-reports/jacoco-ut
    reports:
      junit:
        - de.lmu.ifi.sosy.tbial/target/surefire-reports/TEST-*.xml
  coverage: '/\d+.\d+ \% covered/'

tests:jdk15:
  <<: *verify
  image: maven:3.6.3-openjdk-15-slim

